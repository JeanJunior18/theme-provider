{"version":3,"sources":["styles/Global.ts","components/Header/styles.ts","components/Header/index.tsx","styles/themes/light.ts","styles/themes/dark.ts","hooks/useStorage.ts","App.tsx","index.tsx"],"names":["createGlobalStyle","props","theme","colors","background","textPrimary","Container","styled","div","primary","Header","toggleTheme","title","useContext","ThemeContext","onChange","checked","checkedIcon","uncheckedIcon","height","width","handleDiameter","secondary","textSecondary","useStorage","key","initialState","useState","storage","localStorage","getItem","JSON","parse","state","setstate","useEffect","setItem","stringify","App","light","setTheme","className","dark","Global","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0iBAEeA,kBAAf,KAQkB,SAAAC,GAAK,OAAEA,EAAMC,MAAMC,OAAOC,cAE/B,SAAAH,GAAK,OAAEA,EAAMC,MAAMC,OAAOE,e,8OCVhC,IAAMC,EAAYC,IAAOC,IAAV,KAEN,SAAAP,GAAK,OAAIA,EAAMC,MAAMC,OAAOM,WC0B7BC,EApBuB,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YAC/BC,EAAUC,qBAAWC,KAArBF,MAER,OACE,kBAACN,EAAD,kBAGE,kBAAC,IAAD,CACES,SAAUJ,EACVK,QAAmB,SAAVJ,EACTK,aAAa,EACbC,eAAe,EACfC,OAAQ,GACRC,MAAO,GACPC,eAAgB,OCxBT,GACbT,MAAO,QAEPT,OAAQ,CACNM,QAAS,UACTa,UAAW,UAEXlB,WAAY,UACZC,YAAa,OACbkB,cAAe,SCTJ,GACbX,MAAO,OAEPT,OAAQ,CACNM,QAAS,UACTa,UAAW,UAEXlB,WAAY,OACZC,YAAa,OACbkB,cAAe,SCaJC,MAff,SAAuBC,EAAaC,GAAiC,IAAD,EACxCC,oBAAS,WACjC,IAAMC,EAAWC,aAAaC,QAAQL,GAEtC,OAAOG,EAAWG,KAAKC,MAAMJ,GAAWF,KAJwB,mBAC3DO,EAD2D,KACpDC,EADoD,KAYlE,OAJAC,qBAAU,WACRN,aAAaO,QAAQX,EAAKM,KAAKM,UAAUJ,MACzC,CAACR,EAAKQ,IAED,CAACA,EAAOC,ICYFI,MAtBf,WAAgB,IAAD,EACad,EAAyB,QAASe,GAD/C,mBACNrC,EADM,KACCsC,EADD,KAOb,OACE,kBAAC,IAAD,CAAetC,MAAOA,GACpB,yBAAKuC,UAAU,OACb,kBAAC,EAAD,CAAQ9B,YAPM,WAClB6B,EAAyB,UAAhBtC,EAAMU,MAAoB8B,EAAOH,MAQtC,yBAAKE,UAAU,SACb,qCAAWvC,EAAMU,QAGnB,kBAAC+B,EAAD,SCrBRC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.dbe15f12.chunk.js","sourcesContent":["import { createGlobalStyle } from 'styled-components';\n\nexport default createGlobalStyle`\n  * {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n  }\n\n  body {\n    background: ${props=>props.theme.colors.background};\n    font-size: 14px;\n    color: ${props=>props.theme.colors.textPrimary};\n    font-family: Arial, Helvetica, sans-serif;\n  }\n\n  .theme {\n    margin: 100px;\n    text-align: center;\n  }\n`;","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  height: 60px;\n  background: ${props => props.theme.colors.primary};\n  color: #fff;\n  display: flex;\n  align-items: center;\n  padding: 0 30px;\n  justify-content: space-between;\n`;\n","import React, { useContext } from 'react';\nimport Switch from 'react-switch';\n\nimport { Container } from './styles';\nimport { ThemeContext } from 'styled-components';\n\ninterface HeaderProps {\n  toggleTheme(): void\n}\n\nconst Header: React.FC<HeaderProps> = ({ toggleTheme }) => {\n  const { title } = useContext(ThemeContext);\n  \n  return (\n    <Container>\n      Hello Jean\n\n      <Switch \n        onChange={toggleTheme}\n        checked={title === 'dark'}\n        checkedIcon={false}\n        uncheckedIcon={false}\n        height={15}\n        width={30}\n        handleDiameter={20}\n      />\n    </Container>\n  );\n}\n\nexport default Header;","export default {\n  title: 'light',\n\n  colors: {\n    primary: '#A833B9',\n    secondary: '#AFFC41',\n\n    background: '#f5f5f5',\n    textPrimary: '#333',\n    textSecondary: '#fff',\n  }\n}","export default {\n  title: 'dark',\n\n  colors: {\n    primary: '#102542',\n    secondary: '#B3A394',\n\n    background: '#222',\n    textPrimary: '#fff',\n    textSecondary: '#333',\n  }\n}","import { useState, useEffect, Dispatch, SetStateAction } from 'react';\n\ntype Response<T> = [\n  T,\n  Dispatch<SetStateAction<T>>\n]\n\nfunction useStorage<T>(key: string, initialState: any): Response<T> {\n  const [state, setstate] = useState(()=>{\n    const storage =  localStorage.getItem(key);\n\n    return storage ? (JSON.parse(storage)):(initialState);\n\n  });\n\n  useEffect(()=>{\n    localStorage.setItem(key, JSON.stringify(state))\n  },[key, state])\n\n  return [state, setstate]\n}\n\nexport default useStorage;","import React from 'react';\nimport Global from './styles/Global';\nimport Header from './components/Header';\nimport { ThemeProvider, DefaultTheme } from 'styled-components';\nimport light from './styles/themes/light';\nimport dark from './styles/themes/dark';\nimport useStorage from './hooks/useStorage';\n\n\nfunction App() {\n  const [theme, setTheme] = useStorage<DefaultTheme>('theme', light);\n\n  const toggleTheme = () => {\n    setTheme(theme.title === 'light' ? dark : light)\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <div className=\"App\">\n        <Header toggleTheme={toggleTheme} />\n        \n        <div className=\"theme\">\n          <h1>Theme {theme.title}</h1>\n        </div>\n\n        <Global />\n      </div>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}